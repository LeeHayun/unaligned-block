import torch.nn as nn


def Pixel1LatencyPredictor(model, width_mult=1.0,
                           block_size=1, unaligned=False):
    if width_mult not in [1.0, 0.75, 0.5, 0.25]:
        raise ValueError

    dense_latency = {1.0:  0.740467,
                     0.75: 0.538586,
                     0.5:  0.356271,
                     0.25: 0.196674}

    pw_latency = {1.0: [0.286252, 0.276603, 0.544497, 0.284383, 0.572607,
                        0.276175, 0.546337, 0.546337, 0.546337, 0.546337,
                        0.546337, 0.27144, 0.540702],
                  0.75: [0.166646, 0.160435, 0.309403, 0.162734, 0.324832,
                         0.151412, 0.305300, 0.305300, 0.305300, 0.305300,
                         0.305300, 0.153309, 0.309620],
                  0.5: [0.081946, 0.074307, 0.141252, 0.073767, 0.142284,
                        0.069884, 0.133194, 0.133194, 0.133194, 0.133194,
                        0.133194, 0.085083, 0.136634],
                  0.25: [0.027963, 0.021993, 0.038363, 0.021291, 0.038445,
                         0.020499, 0.037838, 0.037838, 0.037838, 0.037838,
                         0.037838, 0.018857, 0.035618]}

    if block_size == 1:
        if width_mult == 1.0:
            sparse_reg = [[-0.5421820000000003, 0.5824944666666668],
                          [-0.5722148571428571, 0.5840019904761905],
                          [-1.1221308571428574, 1.142440723809524],
                          [-0.616857428571429, 0.6098464952380955],
                          [-1.2494742857142862, 1.2441069523809527],
                          [-0.460979142857143, 0.46946427619047626],
                          [-1.0440548571428576, 1.0601929904761906],
                          [-1.0440548571428576, 1.0601929904761906],
                          [-1.0440548571428576, 1.0601929904761906],
                          [-1.0440548571428576, 1.0601929904761906],
                          [-1.0440548571428576, 1.0601929904761906],
                          [-1.206663142857143, 1.194920542857143],
                          [-2.2211448571428583, 2.2244246571428583]]
        elif width_mult == 0.75:
            sparse_reg = [[-0.3049880000000001, 0.33294886666666673],
                          [-0.31676057142857156, 0.3266120380952382],
                          [-0.6387240000000002, 0.6491212666666668],
                          [-0.3015028571428572, 0.3058851904761905],
                          [-0.7529071428571431, 0.7398998095238096],
                          [-0.26304685714285725, 0.26898979047619054],
                          [-0.5317054285714287, 0.5417330285714287],
                          [-0.7044548571428577, 0.6868596571428576],
                          [-0.7044548571428577, 0.6868596571428576],
                          [-0.7044548571428577, 0.6868596571428576],
                          [-0.7044548571428577, 0.6868596571428576],
                          [-0.7044548571428577, 0.6868596571428576],
                          [-1.2834951428571433, 1.2740050095238098]]
        elif width_mult == 0.5:
            sparse_reg = [[-0.13527914285714293, 0.15455960952380957],
                          [-0.12742228571428574, 0.13763581904761907],
                          [-0.276757142857143, 0.2877318095238096],
                          [-0.1250971428571429, 0.1319024761904762],
                          [-0.2934988571428573, 0.29822559047619057],
                          [-0.1152902857142858, 0.12275768571428577],
                          [-0.21512857142857153, 0.22535990476190482],
                          [-0.2538197142857144, 0.2644446476190477],
                          [-0.2538197142857144, 0.2644446476190477],
                          [-0.2538197142857144, 0.2644446476190477],
                          [-0.2538197142857144, 0.2644446476190477],
                          [-0.2538197142857144, 0.2644446476190477],
                          [-0.5970700000000003, 0.6058810000000001]]
        elif width_mult == 0.25:
            sparse_reg = [[-0.03274800000000002, 0.04265386666666668],
                          [-0.027785142857142866, 0.03440500952380953],
                          [-0.06624571428571431, 0.07360004761904765],
                          [-0.03264542857142858, 0.03724569523809525],
                          [-0.06604742857142859, 0.07124282857142858],
                          [-0.029103142857142862, 0.033693876190476195],
                          [-0.06400028571428575, 0.06820201904761908],
                          [-0.07292285714285718, 0.07767452380952383],
                          [-0.07292285714285718, 0.07767452380952383],
                          [-0.07292285714285718, 0.07767452380952383],
                          [-0.07292285714285718, 0.07767452380952383],
                          [-0.07292285714285718, 0.07767452380952383],
                          [-0.14761971428571433, 0.1520523142857143]]
    elif block_size == 2:
        if unaligned:
            if width_mult == 1.0:
                sparse_reg = [[-0.4686034285714288, 0.5011382285714288],
                              [-0.47011971428571436, 0.4842083142857143],
                              [-0.9249665714285717, 0.9424897714285716],
                              [-0.44357685714285733, 0.4506954571428573],
                              [-0.9600194285714289, 0.9673926285714287],
                              [-0.3284911428571431, 0.3411744095238097],
                              [-0.9455328571428575, 0.9426311904761908],
                              [-0.9455328571428575, 0.9426311904761908],
                              [-0.9455328571428575, 0.9426311904761908],
                              [-0.9455328571428575, 0.9426311904761908],
                              [-0.9455328571428575, 0.9426311904761908],
                              [-0.5094340000000002, 0.5214249333333334],
                              [-1.0719242857142863, 1.0865296190476195]]
            elif width_mult == 0.75:
                sparse_reg = [[-0.2641422857142858, 0.2885648190476191],
                              [-0.2583485714285715, 0.2696319047619048],
                              [-0.5175408571428572, 0.5318263904761905],
                              [-0.2171745714285715, 0.22708397142857148],
                              [-0.5379445714285717, 0.5412266380952383],
                              [-0.18088657142857154, 0.1900977714285715],
                              [-0.46219657142857157, 0.4678061047619049],
                              [-0.28723400000000016, 0.2976126000000001],
                              [-0.28723400000000016, 0.2976126000000001],
                              [-0.28723400000000016, 0.2976126000000001],
                              [-0.28723400000000016, 0.2976126000000001],
                              [-0.28723400000000016, 0.2976126000000001],
                              [-0.5974554285714289, 0.6075483619047621]]
            elif width_mult == 0.5:
                sparse_reg = [[-0.11554428571428577, 0.1316736190476191],
                              [-0.10580742857142865, 0.11417082857142863],
                              [-0.23289228571428577, 0.24073148571428576],
                              [-0.0904731428571429, 0.09731420952380955],
                              [-0.21689114285714295, 0.2222507428571429],
                              [-0.08185485714285717, 0.08787965714285717],
                              [-0.17115685714285722, 0.17691912380952385],
                              [-0.1309877142857143, 0.13704518095238094],
                              [-0.1309877142857143, 0.13704518095238094],
                              [-0.1309877142857143, 0.13704518095238094],
                              [-0.1309877142857143, 0.13704518095238094],
                              [-0.1309877142857143, 0.13704518095238094],
                              [-0.25923342857142867, 0.26594422857142863]]
            elif width_mult == 0.25:
                sparse_reg = [[-0.026548571428571435, 0.03439357142857144],
                              [-0.022512857142857157, 0.027506190476190486],
                              [-0.053313714285714305, 0.0579299142857143],
                              [-0.023065714285714294, 0.02676338095238096],
                              [-0.04559771428571431, 0.049622847619047644],
                              [-0.020738285714285726, 0.02440455238095239],
                              [-0.040727714285714305, 0.0445995142857143],
                              [-0.03254857142857145, 0.03669657142857144],
                              [-0.03254857142857145, 0.03669657142857144],
                              [-0.03254857142857145, 0.03669657142857144],
                              [-0.03254857142857145, 0.03669657142857144],
                              [-0.03254857142857145, 0.03669657142857144],
                              [-0.06543885714285717, 0.06948592380952383]]
        else:
            if width_mult == 1.0:
                sparse_reg = [[-0.4556562857142859, 0.48466875238095253],
                              [-0.4584900000000001, 0.4678456666666667],
                              [-0.9146905714285715, 0.9266790380952381],
                              [-0.4183325714285715, 0.42404683809523813],
                              [-0.9083400000000004, 0.9168270000000003],
                              [-0.3326665714285716, 0.3420037714285715],
                              [-0.8864591428571431, 0.8902622761904764],
                              [-0.8864591428571431, 0.8902622761904764],
                              [-0.8864591428571431, 0.8902622761904764],
                              [-0.8864591428571431, 0.8902622761904764],
                              [-0.8864591428571431, 0.8902622761904764],
                              [-0.5438394285714288, 0.5515492952380954],
                              [-1.0952162857142862, 1.1074007523809528]]
            elif width_mult == 0.75:
                sparse_reg = [[-0.2606665714285716, 0.28002543809523817],
                              [-0.2529120000000001, 0.26063446666666673],
                              [-0.5106322857142859, 0.5208284857142859],
                              [-0.21286085714285727, 0.21978772380952388],
                              [-0.5128837142857146, 0.5145282476190478],
                              [-0.18832828571428575, 0.19413421904761907],
                              [-0.4549234285714287, 0.46007456190476204],
                              [-0.30741571428571435, 0.3137077142857143],
                              [-0.30741571428571435, 0.3137077142857143],
                              [-0.30741571428571435, 0.3137077142857143],
                              [-0.30741571428571435, 0.3137077142857143],
                              [-0.30741571428571435, 0.3137077142857143],
                              [-0.6008314285714288, 0.6108747619047621]]
            elif width_mult == 0.5:
                sparse_reg = [[-0.1370334285714286, 0.15003756190476195],
                              [-0.11581600000000007, 0.12294740000000004],
                              [-0.25077600000000005, 0.2589657333333334],
                              [-0.09920828571428578, 0.10544188571428575],
                              [-0.22790771428571438, 0.23493151428571435],
                              [-0.08736857142857148, 0.0941269047619048],
                              [-0.1742088571428572, 0.18561092380952385],
                              [-0.14288142857142858, 0.15105709523809524],
                              [-0.14288142857142858, 0.15105709523809524],
                              [-0.14288142857142858, 0.15105709523809524],
                              [-0.14288142857142858, 0.15105709523809524],
                              [-0.14288142857142858, 0.15105709523809524],
                              [-0.2753085714285715, 0.29010623809523817]]
            elif width_mult == 0.25:
                sparse_reg = [[-0.027478571428571442, 0.03636157142857144],
                              [-0.02487142857142858, 0.030383761904761913],
                              [-0.05935057142857146, 0.06460437142857145],
                              [-0.026626571428571444, 0.030332438095238105],
                              [-0.05476000000000004, 0.05834833333333336],
                              [-0.02604428571428572, 0.029337619047619053],
                              [-0.05547885714285716, 0.057730923809523826],
                              [-0.04442314285714287, 0.04712420952380954],
                              [-0.04442314285714287, 0.04712420952380954],
                              [-0.04442314285714287, 0.04712420952380954],
                              [-0.04442314285714287, 0.04712420952380954],
                              [-0.04442314285714287, 0.04712420952380954],
                              [-0.08537485714285717, 0.0880619904761905]]

    elif block_size == 4:
        if width_mult == 1.0:
            sparse_reg = [[-0.43376771428571453, 0.4672125142857144],
                          [-0.43498885714285723, 0.4470272571428572],
                          [-0.8593145714285718, 0.8817079714285716],
                          [-0.38723028571428586, 0.3942303523809525],
                          [-0.8430580000000003, 0.8518278666666669],
                          [-0.33269371428571437, 0.343898580952381],
                          [-0.871185428571429, 0.8787250285714289],
                          [-0.871185428571429, 0.8787250285714289],
                          [-0.871185428571429, 0.8787250285714289],
                          [-0.871185428571429, 0.8787250285714289],
                          [-0.871185428571429, 0.8787250285714289],
                          [-0.3427388571428573, 0.35219259047619056],
                          [-0.8772777142857145, 0.8772028476190479]]
        elif width_mult == 0.75:
            sparse_reg = [[-0.25212228571428585, 0.2780098190476191],
                          [-0.2402748571428572, 0.2513716571428572],
                          [-0.528815142857143, 0.5316356761904764],
                          [-0.20149714285714296, 0.2077128095238096],
                          [-0.4681451428571431, 0.47537067619047635],
                          [-0.18246057142857147, 0.19199337142857148],
                          [-0.4794774285714287, 0.483165161904762],
                          [-0.19474714285714292, 0.20201414285714292],
                          [-0.19474714285714292, 0.20201414285714292],
                          [-0.19474714285714292, 0.20201414285714292],
                          [-0.19474714285714292, 0.20201414285714292],
                          [-0.19474714285714292, 0.20201414285714292],
                          [-0.40850685714285734, 0.42266612380952395]]
        elif width_mult == 0.5:
            sparse_reg = [[-0.1341168571428572, 0.15048979047619052],
                          [-0.11528542857142864, 0.12398036190476194],
                          [-0.26592228571428583, 0.2718748190476191],
                          [-0.09968371428571435, 0.10609224761904765],
                          [-0.22987485714285727, 0.23416665714285723],
                          [-0.09720628571428577, 0.10258708571428576],
                          [-0.1965142857142858, 0.20535028571428576],
                          [-0.09344657142857148, 0.10102843809523812],
                          [-0.09344657142857148, 0.10102843809523812],
                          [-0.09344657142857148, 0.10102843809523812],
                          [-0.09344657142857148, 0.10102843809523812],
                          [-0.09344657142857148, 0.10102843809523812],
                          [-0.18678828571428582, 0.1962908857142858]]
        elif width_mult == 0.25:
            sparse_reg = [[-0.02499228571428573, 0.03629181904761906],
                          [-0.025402285714285728, 0.03208281904761906],
                          [-0.05569914285714289, 0.061781609523809546],
                          [-0.027532285714285724, 0.03245415238095239],
                          [-0.051162857142857156, 0.05609485714285715],
                          [-0.02637057142857144, 0.029572038095238104],
                          [-0.05501000000000004, 0.05772866666666669],
                          [-0.027731714285714297, 0.031098447619047627],
                          [-0.027731714285714297, 0.031098447619047627],
                          [-0.027731714285714297, 0.031098447619047627],
                          [-0.027731714285714297, 0.031098447619047627],
                          [-0.027731714285714297, 0.031098447619047627],
                          [-0.05538485714285715, 0.058098323809523816]]

    total_latency = dense_latency[width_mult]

    idx = 0
    for m in model.modules():
        if isinstance(m, nn.Conv2d) and m.groups == 1 and m.kernel_size == (1, 1):
            w = m.weight.data
            sparsity = 1. - w.count_nonzero().item() / w.nelement()
            sparse_latency = sparse_reg[idx][0] * sparsity + sparse_reg[idx][1]
            min_latency = pw_latency[width_mult][idx]
            if width_mult == 1.0:
                min_latency = min(min_latency, sparse_latency)
            total_latency += min_latency
            idx += 1

    return total_latency
